---
- name: check openstack variables
  debug:
    msg: "OS_AUTH_URL: {{ lookup('env','OS_AUTH_URL') }}, OS_PROJECT_DOMAIN_NAME: {{ lookup('env','OS_PROJECT_DOMAIN_NAME') }}, OS_PROJECT_NAME: {{ lookup('env','OS_PROJECT_NAME') }}, OS_USERNAME: {{ lookup('env','OS_USERNAME') }}, OS_USER_DOMAIN_NAME: {{ lookup('env','OS_USER_DOMAIN_NAME') }}, OS_IDENTITY_API_VERSION: {{ lookup('env','OS_IDENTITY_API_VERSION') }}"

# for osp-13 installation, need to restart nova and cinder services
- name: restart services
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - openstack-nova-compute
    - openstack-nova-conductor
    - openstack-nova-consoleauth
    - openstack-nova-api
    - openstack-nova-scheduler
    - openstack-nova-novncproxy
    - openstack-glance-registry
    - openstack-glance-api
    - openstack-cinder-backup
    - openstack-cinder-scheduler
    - openstack-cinder-api
    - openstack-cinder-volume

- name: install python-pip package
  yum:
    name: python-pip
    state: present

- name: install the required pip packages
  pip:
    name: "{{ item }}"
    state: latest
  with_items:
    - openstacksdk

- name: add a new key pair
  os_keypair:
    name: "{{ os_key_pair_name }}"
    public_key: "{{ os_key_pair_public_key }}"
    state: present
  ignore_errors: yes

#- name: copy public key
#  copy:
#    content: "{{ os_key_pair_public_key }}"
#    dest: "/tmp/{{ os_key_pair_name }}-pub-key"

#- name: add a new key pair
#  shell: source /root/keystonerc_admin && openstack keypair create --public-key "/tmp/{{ os_key_pair_name }}-pub-key" "{{ os_key_pair_name }}"
#  ignore_errors: yes

#- name: remove public key
#  file:
#    path: "/tmp/{{ os_key_pair_name }}-pub-key"
#    state: absent

- name: mount share if applicable
  mount:
    path: /mnt
    src: "{{ nfs_share }}"
    fstype: nfs
    opts: nolock
    state: mounted
  when: nfs_share is defined

- include: upload_image.yml os_image='{{ include_item }}'
  with_items: '{{ os_images }}'
  loop_control:
    loop_var: include_item

- name: unmount share if applicable
  mount:
    path: /mnt
    state: unmounted
  when: nfs_share is defined