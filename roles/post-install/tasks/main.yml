---

- name: check openstack config file
  stat:
    path: "{{ config_file }}"
  register: st
  become: no
  delegate_to: localhost

- name: include openstack details
  include_vars: "{{ config_file }}"
  when: st.stat.exists and st.stat.isreg
  become: no
  delegate_to: localhost

## Disable openstacksdk installation as it seems to break glance on osp 14

#- name: install epel repo on CentOS
#  yum:
#    name: epel-release
#    state: present
#  when: ansible_distribution == 'CentOS'
#
#- name: install epel on RHEL
#  yum:
#    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#    state: present
#  register: install_epel
#  until: '"error" not in install_epel'
#  retries: 5
#  delay: 10
#  when: ansible_distribution == 'RedHat'
#
#- name: install python-pip package
#  yum:
#    name: python-pip
#    state: present
#
#- name: install the required pip packages
#  pip:
#    name: openstacksdk
#    state: latest

## END HERE

#- name: add a new key pair
#  os_keypair:
#    name: "{{ os_key_pair_name }}"
#    public_key: "{{ os_key_pair_public_key }}"
#    state: present
#  ignore_errors: yes

- name: add a new key pair
  os_keypair:
    state: present
    name: "{{ os_key_pair_name }}"
    public_key: "{{ os_key_pair_public_key }}"
  delegate_to: localhost
  become: no
  ignore_errors: yes

#- name: copy public key
#  copy:
#    content: "{{ os_key_pair_public_key }}"
#    dest: "/tmp/{{ os_key_pair_name }}-pub-key"
#
#- name: add a new key pair
#  shell: source /root/keystonerc_admin && openstack keypair create --public-key "/tmp/{{ os_key_pair_name }}-pub-key" "{{ os_key_pair_name }}"
#  ignore_errors: yes
#
#- name: remove public key
#  file:
#    path: "/tmp/{{ os_key_pair_name }}-pub-key"
#    state: absent

- name: gather facts on images
  os_image_facts:
  delegate_to: localhost
  become: no
  ignore_errors: yes

- name: show openstack images
  debug:
    var: openstack_image
  when: openstack_image is defined

- name: mount share if applicable
  mount:
    path: /mnt
    src: "{{ nfs_share }}"
    fstype: nfs
    opts: nolock
    state: mounted
  when: nfs_share is defined

- include: upload_image.yml os_image='{{ include_item }}'
  loop: '{{ os_images }}'
  loop_control:
    loop_var: include_item

- name: unmount share if applicable
  mount:
    path: /mnt
    state: unmounted
  when: nfs_share is defined

# for osp-13 installation, need to restart nova and cinder services
- name: restart services
  service:
    name: "{{ item }}"
    state: restarted
  loop:
    - openstack-nova-compute
    - openstack-nova-conductor
#    - openstack-nova-consoleauth
#    - openstack-nova-api
    - openstack-nova-scheduler
    - openstack-nova-novncproxy
    - openstack-glance-registry
    - openstack-glance-api
    - openstack-cinder-backup
    - openstack-cinder-scheduler
    - openstack-cinder-api
    - openstack-cinder-volume
  when: not reboot_after_install

- name: reboot system
  reboot:
    reboot_timeout: 3600
  when: reboot_after_install

- name: waiting for keystone to be available
  wait_for:
    host: "{{ ansible_host | default(inventory_hostname) }}"
    port: 5000
  delegate_to: 127.0.0.1
  become: no
  when: reboot_after_install

- name: copy restart playbook
  copy:
    src: restart.yml
    dest: /root/restart.yml

- name: gather facts on images
  os_image_facts:
  delegate_to: localhost
  become: no
  ignore_errors: yes

- name: show openstack images
  debug:
    var: openstack_image
  when: openstack_image is defined